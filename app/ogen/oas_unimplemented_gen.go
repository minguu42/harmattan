// Code generated by ogen, DO NOT EDIT.

package ogen

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// DeleteProject implements deleteProject operation.
//
// プロジェクトを削除する.
//
// DELETE /projects/{projectID}
func (UnimplementedHandler) DeleteProject(ctx context.Context, params DeleteProjectParams) (r DeleteProjectRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteTask implements deleteTask operation.
//
// タスクを削除する.
//
// DELETE /projects/{projectID}/tasks/{taskID}
func (UnimplementedHandler) DeleteTask(ctx context.Context, params DeleteTaskParams) (r DeleteTaskRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetHealth implements getHealth operation.
//
// サーバの状態を取得する.
//
// GET /health
func (UnimplementedHandler) GetHealth(ctx context.Context) (r GetHealthRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetProjects implements getProjects operation.
//
// 作成日時の降順で取得する。.
//
// GET /projects
func (UnimplementedHandler) GetProjects(ctx context.Context, params GetProjectsParams) (r GetProjectsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetTasks implements getTasks operation.
//
// 作成日時の降順で取得する。.
//
// GET /projects/{projectID}/tasks
func (UnimplementedHandler) GetTasks(ctx context.Context, params GetTasksParams) (r GetTasksRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PatchProject implements patchProject operation.
//
// プロジェクトを更新する.
//
// PATCH /projects/{projectID}
func (UnimplementedHandler) PatchProject(ctx context.Context, req *PatchProjectReq, params PatchProjectParams) (r PatchProjectRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PatchTask implements patchTask operation.
//
// タスクを更新する.
//
// PATCH /projects/{projectID}/tasks/{taskID}
func (UnimplementedHandler) PatchTask(ctx context.Context, req *PatchTaskReq, params PatchTaskParams) (r PatchTaskRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostProjects implements PostProjects operation.
//
// 新しいプロジェクトを作成する.
//
// POST /projects
func (UnimplementedHandler) PostProjects(ctx context.Context, req *PostProjectsReq, params PostProjectsParams) (r PostProjectsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PostTasks implements PostTasks operation.
//
// 新しいタスクを作成する.
//
// POST /projects/{projectID}/tasks
func (UnimplementedHandler) PostTasks(ctx context.Context, req *PostTasksReq, params PostTasksParams) (r PostTasksRes, _ error) {
	return r, ht.ErrNotImplemented
}
