openapi: 3.0.3

info:
  title: mTasks API Specification
  version: v0.1.4

servers:
  - url: http://localhost:8080/
    description: ローカル環境のAPIサーバ

tags:
  - name: projects
  - name: tasks
  - name: monitoring

paths:
  /projects:
    post:
      tags:
        - projects
      summary: 新しいプロジェクトを作成する
      operationId: CreateProject
      security:
        - isAuthorized: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: プロジェクト1
              required:
                - name
      responses:
        201:
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        default:
          $ref: "#/components/responses/Error"
    get:
      tags:
        - projects
      summary: プロジェクト一覧を取得する
      description: 作成日時の降順で取得する。
      operationId: ListProjects
      security:
        - isAuthorized: [ ]
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
        - name: sort
          in: query
          description: 並び順を指定する。`-`をつければ降順になり、つけなければ昇順となる。
          schema:
            type: string
            enum:
              - createdAt
              - -createdAt
            default: -createdAt
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Projects"
        default:
          $ref: "#/components/responses/Error"
  /projects/{projectID}:
    parameters:
      - $ref: "#/components/parameters/projectID"
    patch:
      tags:
        - projects
      summary: プロジェクトを更新する
      operationId: UpdateProject
      security:
        - isAuthorized: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: プロジェクト1
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        default:
          $ref: "#/components/responses/Error"
    delete:
      tags:
        - projects
      summary: プロジェクトを削除する
      operationId: DeleteProject
      security:
        - isAuthorized: [ ]
      responses:
        204:
          description: 成功
        default:
          $ref: "#/components/responses/Error"
  /projects/{projectID}/tasks:
    parameters:
      - $ref: "#/components/parameters/projectID"
    post:
      tags:
        - tasks
      summary: 新しいタスクを作成する
      operationId: CreateTask
      security:
        - isAuthorized: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: タスク1
              required:
                - title
      responses:
        201:
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        default:
          $ref: "#/components/responses/Error"
    get:
      tags:
        - tasks
      summary: タスク一覧を取得する
      description: 作成日時の降順で取得する。
      operationId: ListTasks
      security:
        - isAuthorized: [ ]
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
        - name: sort
          in: query
          description: 並び順を指定する。`-`をつければ降順になり、つけなければ昇順となる。
          schema:
            type: string
            enum:
              - createdAt
              - -createdAt
            default: -createdAt
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tasks"
        default:
          $ref: "#/components/responses/Error"
  /projects/{projectID}/tasks/{taskID}:
    parameters:
      - $ref: "#/components/parameters/projectID"
      - $ref: "#/components/parameters/taskID"
    patch:
      tags:
        - tasks
      summary: タスクを更新する
      operationId: UpdateTask
      security:
        - isAuthorized: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isCompleted:
                  type: boolean
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        default:
          $ref: "#/components/responses/Error"
    delete:
      tags:
        - tasks
      summary: タスクを削除する
      operationId: DeleteTask
      security:
        - isAuthorized: [ ]
      responses:
        204:
          description: 成功
        default:
          $ref: "#/components/responses/Error"
  /health:
    get:
      tags:
        - monitoring
      summary: サーバの状態を取得する
      operationId: GetHealth
      security: [ ]
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                required:
                  - version
                  - revision
                properties:
                  version:
                    description: mTasks APIのバージョン
                    type: string
                    example: v0.1.0
                  revision:
                    description: mTasks APIのリビジョン
                    type: string
                    example: a1b2c3d
        default:
          $ref: "#/components/responses/Error"

components:
  schemas:
    Project:
      type: object
      properties:
        id:
          description: プロジェクトID
          type: string
        name:
          description: プロジェクト名
          type: string
          example: プロジェクト1
        createdAt:
          description: 作成日時
          type: string
          format: date-time
        updatedAt:
          description: 更新日時
          type: string
          format: date-time
      required:
        - id
        - name
        - createdAt
        - updatedAt
    Projects:
      type: object
      properties:
        projects:
          description: プロジェクト一覧
          type: array
          items:
            $ref: "#/components/schemas/Project"
        hasNext:
          description: まだ取得可能なプロジェクトが存在するか
          type: boolean
      required:
        - projects
        - hasNext
    Task:
      type: object
      properties:
        id:
          description: タスクID
          type: string
        project_id:
          description: 紐づくプロジェクトのID
          type: string
        title:
          description: タイトル
          type: string
          example: タスク1
        completedAt:
          description: 完了日時
          type: string
          format: date-time
        createdAt:
          description: 作成日時
          type: string
          format: date-time
        updatedAt:
          description: 更新日時
          type: string
          format: date-time
      required:
        - id
        - project_id
        - title
        - createdAt
        - updatedAt
    Tasks:
      type: object
      properties:
        tasks:
          description: タスク一覧
          type: array
          items:
            $ref: "#/components/schemas/Task"
        hasNext:
          description: まだ取得可能なタスクが存在するか
          type: boolean
      required:
        - tasks
        - hasNext
  parameters:
    limit:
      name: limit
      in: query
      description: リソースの最大取得数を指定する。
      schema:
        type: integer
        default: 10
        minimum: 1
        maximum: 30
    offset:
      name: offset
      in: query
      description: リソースの取得開始位置を指定する。
      schema:
        type: integer
        default: 0
        minimum: 0
    projectID:
      name: projectID
      in: path
      required: true
      schema:
        type: string
    taskID:
      name: taskID
      in: path
      required: true
      schema:
        type: string
  responses:
    Error:
      description: エラー
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                description: ユーザ向けの大まかなエラーの説明
                type: string
              debug:
                description: 開発者向けの詳細なエラーの説明
                type: string
            required:
              - message
              - debug
  securitySchemes:
    isAuthorized:
      type: apiKey
      name: X-Api-Key
      in: header
